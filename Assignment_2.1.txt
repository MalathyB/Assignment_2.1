1) Write a java code with the class named ‘acad’ and a method ‘main’. Hardcode the program
with two integers and print the sum of those two.
  
Program: import java.util.Scanner;

         public class acad {
	 void main(){
		int sum=0;
		int a=10,b=20;
		sum=a+b;
		System.out.println(sum);
		
		}
	    public static void main(String[] agrs){
		acad as=new acad();
		as.main();
		
	    }
  
         }
  
output:
         30

    

2) Rewrite the above code, where, inputs are provided by the user at runtime and the output
is printed.

Program:import java.util.Scanner;

        public class acad {
	    void main(){
		int sum=0;
		Scanner sc=new Scanner(System.in);
		int a=sc.nextInt();
		int b=sc.nextInt();
		sum=a+b;
		System.out.println(sum);
		sc.close();
		}
	    public static void main(String[] agrs){
		acad as=new acad();
		as.main();
		
	    }

      }

  
output:
         10
         20
         30


3) Write a program with a method name sum() that accepts two parameters from the user and
print the sum two numbers. Output of the format should be as:
First number is:
Second number is:
Sum is: 


Program:
       import java.util.Scanner;

       public class acad {
	void sum(int a,int b){
		int sum=0;
		sum=a+b;
		System.out.println("Sum is:"+sum);
		}
	public static void main(String[] agrs){
		acad as=new acad();
		Scanner sc=new Scanner(System.in);
                System.out.print("Frist number is:");
		int a=sc.nextInt();
                System.out.print("Second number is:");
		int b=sc.nextInt();
		as.sum(a, b);
		sc.close();
	}

       }

output:
      Frist number is:12
      Second number is:12
      Sum is:24

4) Write a program to accepts two numbers from stdin and find all the odd as well as even
numbers present in between them.
program:
import java.util.Scanner;


class acad {
  public static void main(String []args) {
	  int i, num,n;
	  Scanner sc=new Scanner(System.in);
	   System.out.println("Enter the frist number:");
	    num=sc.nextInt();
	  
	    System.out.println("Enter the second number:");
	    n=sc.nextInt();
	    
	    System.out.println("Even numbers in the array are :");
	    for (i = num; i < n; i++)
	    {
	        if (i % 2 == 0)
	        {
	           System.out.println(i);
	        }
	    }
	   System.out.println("Odd numbers in the array are :");
	    for (i = num; i < n; i++)
	    {
	        if (i % 2 != 0)
	        {
	          System.out.println(i);
	        }
	    }
	    sc.close();
  } 
}

output:
Enter the frist number:
2
Enter the second number:
9
Even numbers in the array are :
2
4
6
8
Odd numbers in the array are :
3
5
7


5) Joe is scared to go to school. When her dad asked the reason, Joe said she is unable to complete
the task given by her teacher. The task was to find the “first 10 multiples” of the number entered
from stdin.
Example:
Input: 3
O/p:
3 x 1 = 3
3 x 2 = 6
………
………
…….
….
3 x 10 = 30

program:
import java.util.Scanner;


class acad {
  public static void main(String []args) {
	  int i,n;
	  Scanner sc=new Scanner(System.in);
	   System.out.println("Enter the input:");
	   n=sc.nextInt();
	   for(i=1;i<=10;i++){
		   System.out.println(n+" * "+i+" = "+(n*i));
	   }
	    sc.close();
  } 
}
output:

Enter the input:
2
2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18
2 * 10 = 20

6) Write a program consisting method sum() and demonstrate the concept of method
overloading using this method.
program:

class acad {
  public static void main(String []args) {
	  System.out.println(Adder.sum(11,11));  
	  System.out.println(Adder.sum(10,15,10));  
  } 
}
class Adder{  
static int sum(int a,int b){
	return a+b;
	}  
static int sum(int a,int b,int c){
	return a+b+c;
	}  
}  

output:
22
35



7) Can you overload a method with the same return type? Explain your answer with proper logic.

     *  Yes,we can overload a method with the same return type but it should have different number of arguments
program:

class acad {
	 public static void main(String args[])
	   {
	      Sample obj1= new Sample();
	       System.out.println(obj1.myMethod(10,10,10));
	      System.out.println(obj1.myMethod(20,12));
	   }
	  
	}
	class Sample
	{
		 public int myMethod(int num1, int num2,int num3)
		   { 
		       return num1+num2+num3;
		   }
		   public int myMethod(int var1, int var2)
		   {
		       return var1-var2;
		   }
	}



output:
30
8

8) Write a program in java using Arrays that sorts the element in descending order.

Program:

import java.util.Scanner;

class acad {
  public static void main(String []args) {
    int num, i, j, temp;
    Scanner input = new Scanner(System.in);
 
    System.out.println("Enter the number of integers to sort:");
    num = input.nextInt();
 
    int array[] = new int[num];
 
    System.out.println("Enter " + num + " integers: ");
 
    for (i = 0; i < num; i++) 
      array[i] = input.nextInt();
 
    for (i = 0; i < ( num - 1 ); i++) {
      for (j = 0; j < num - i - 1; j++) {
        if (array[j] < array[j+1]) 
        {
          temp = array[j];
          array[j] = array[j+1];
          array[j+1] = temp;
        }
      }
    }
 
    System.out.println("Sorted list of integers:");
 
    for (i = 0; i < num; i++) 
      System.out.println(array[i]);
    input.close();
  } 
}

Output:

Enter the number of integers to sort:
4
Enter 4 integers: 
5
7
2
8
Sorted list of integers:
8
7
5
2
